// This file should be generated by the Firebase CLI
// Run: flutterfire configure
// 
// IMPORTANT: This is a placeholder file. You need to run the Firebase CLI to generate the actual configuration.
// 
// Steps:
// 1. Install Firebase CLI: npm install -g firebase-tools
// 2. Install FlutterFire CLI: dart pub global activate flutterfire_cli
// 3. Run: flutterfire configure --project=notification-f1653
// 4. Select your platforms (iOS, Android)
// 5. This file will be automatically generated with your Firebase configuration
//
// The generated file will look something like this:

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you need to run flutterfire configure',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you need to run flutterfire configure',
        );
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you need to run flutterfire configure',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you need to run flutterfire configure',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you need to run flutterfire configure',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Placeholder iOS configuration - will be replaced by flutterfire configure
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'YOUR_IOS_API_KEY',
    appId: 'YOUR_IOS_APP_ID',
    messagingSenderId: 'YOUR_MESSAGING_SENDER_ID',
    projectId: 'notification-f1653',
    storageBucket: 'YOUR_STORAGE_BUCKET',
    iosBundleId: 'com.mycompany.luxappv1',
  );
}